name: Deploy to Vercel (Production)

on:
  push:
    branches:
      - 'main'
    paths:
      - '.github/workflows/deploy-vercel-production.yml'
      - 'cypress/**'
      - '!cypress/_examples/**'
      - '!cypress/integration-storybook/**'
      - '!cypress/config-*.json' # Exclude all config files
      - 'cypress/config-customer-ci-cd.json' # Force include CI/CD config file
      - 'public/**'
      - 'scripts/populate-git-env.sh'
      - 'src/**'
      - '!src/stories/**'
      - '.eslint*'
      - '*.js*' # Includes all .js/.json at the root level
      - '*.ts' # Includes all .ts at the root level
      - '.*ignore' # Includes .gitignore and .vercelignore
      - 'yarn.lock'
      - '!**/*.md' # Exclude all markdown files
  workflow_dispatch:
    inputs:
      customer:
        description: 'Customer to deploy'
        required: true

env:
  STAGE: production

jobs:
  setup-environment:
    name: Setup deployment environment (Node 16.x)
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: '16'

  start-staging-deployment:
    name: Starts Vercel deployment (production)
    runs-on: ubuntu-latest
    needs: setup-environment
    timeout-minutes: 40 
    steps:
      - uses: actions/checkout@v1

      - name: Expose GitHub slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Start GitHub deployment
        uses: bobheadxi/deployments@v1.4.0
        id: start-github-deployment
        with:
          step: start
          env: ${{ env.STAGE }}
          override: false

      - uses: amondnet/vercel-action@v20
        id: vercel-deployment
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}

      - name: Link GitHub deployment to Vercel
        uses: bobheadxi/deployments@v1
        id: link-github-deployment-to-vercel
        if: always()
        with:
          step: finish
          env: ${{ env.STAGE }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.start-github-deployment.outputs.deployment_id }}
          env_url: ${{ steps.vercel-deployment.outputs.preview-url }}
          
      - name: Store variables for next jobs
        uses: UnlyEd/github-action-store-variable@v2.1.1 # See https://github.com/UnlyEd/github-action-store-variable
        with:
          variables: |
            CUSTOMER_REF_TO_DEPLOY=${{ env.CUSTOMER_REF_TO_DEPLOY }}
            VERCEL_DEPLOYMENT_URL=${{ steps.vercel-deployment.outputs.preview-url }}
            VERCEL_DEPLOYMENT_DOMAIN=${{ env.VERCEL_DEPLOYMENT_DOMAIN }}
            MANUAL_TRIGGER_CUSTOMER=${{ env.MANUAL_TRIGGER_CUSTOMER }}
            GITHUB_PULL_REQUEST_ID=${{ steps.pr_id_finder.outputs.number }}
